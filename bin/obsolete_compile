#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

##### helper functions -> #############

function speak (){
  echo "-----> $(date -u '+%Y-%m-%d_%H:%M:%S') $1"
}

##### <- helper functions #############

speak "Compiling with Haskell Cloud Foundry Buildpack."

##### preparation -> ##################

set -e
set -o pipefail

BUILD_DIR="$1"
speak "Build directory: $BUILD_DIR."

CACHE_DIR="$2"
speak "Cache directory: $CACHE_DIR."

if [ -d $CACHE_DIR/.stack ]
then
	speak "Stack cache directory found: $CACHE_DIR/.stack."
	ls $CACHE_DIR/.stack
else
	speak "Stack cache directory not found: $CACHE_DIR/.stack."
fi

PRESERVED_HTTPS_PROXY=$https_proxy
STACK_PROXY=$stack_proxy
if [ -z "$STACK_PROXY" ]
then
	speak "Stack proxy not found. If you have a proxy configured (https_proxy environment variable), it will not be ovewritten during this compilation."
else
	speak "Stack proxy found: $STACK_PROXY. If you have a proxy configured (https_proxy environment variable), it will be ovewritten for the duration of this compilation."
fi

##### <- preparation ##################

##### getting stack -> ################

STACK_VER="1.9.3"
STACK_URL="https://github.com/commercialhaskell/stack/releases/download/v"$STACK_VER"/stack-"$STACK_VER"-linux-x86_64.tar.gz"
STACK_NAME="stack-$STACK_VER"
STACK_DIR="$CACHE_DIR/$STACK_NAME"
STACK_EXE="$STACK_DIR/stack"
if [ ! -e "$STACK_EXE" ]
then
	speak "Downloading Stack version $STACK_NAME."
	mkdir -p "$STACK_DIR"
	curl -# -L "$STACK_URL" | tar xz -C "$STACK_DIR" --strip-components=1
	chmod u+x $STACK_EXE
else
	speak "Stack version $STACK_NAME already downloaded."
fi

##### <- getting stack ################

##### building the project -> #########

STACK_WORK_DIR=".stack-work"
SANDBOX_DIR="$CACHE_DIR/$STACK_WORK_DIR"
if [ -e "$SANDBOX_DIR" ]
then
	speak "Restoring $SANDBOX_DIR to $BUILD_DIR."
	cp -Rp "$SANDBOX_DIR" "$BUILD_DIR"
else
	speak "Stack work directory $SANDBOX_DIR not found."
fi

if [ ! -z "$STACK_PROXY" ]
then
	speak "Updating your current proxy setting: $https_proxy."
	export https_proxy=$STACK_PROXY
	speak "Your new temporary proxy setting: $https_proxy."
fi

speak "Running Stack."
cd "$BUILD_DIR"
$STACK_EXE setup
$STACK_EXE build --fast

speak "Making Stack binaries available."
mkdir -p "$BUILD_DIR/bin"
mv $($STACK_EXE path --local-install-root)/bin/* $BUILD_DIR/bin

speak "Writing out the start script."
echo -e "---\ndefault_process_types:\n  web: /home/vcap/app/bin/`ls $BUILD_DIR/bin`" > $BUILD_DIR/startScript.yml

speak "Caching .stack-work."
rm -rf $SANDBOX_DIR
cp -Rp $BUILD_DIR/$STACK_WORK_DIR $SANDBOX_DIR

##### <- building the project #########

##### cleanup -> ######################

if [ ! -z "$STACK_PROXY" ]
then
	speak "Cleaning up."
	speak "Current value of your proxy setting is: $https_proxy. Restoring to your previous proxy setting: $PRESERVED_HTTPS_PROXY."
	export https_proxy=$PRESERVED_HTTPS_PROXY
	speak "Your proxy is back to: $https_proxy."
fi

##### <- cleanup ######################

speak "Finished!"
